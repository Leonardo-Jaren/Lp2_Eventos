create database lp2_eventos;
use lp2_eventos;

create table roles(
id_rol int primary key auto_increment,
nombre varchar(50) unique not null
);

create table usuarios(
id_usuario int primary key auto_increment,
id_rol int not null,
nombre varchar(100) not null,
correo varchar(100) not null,
apellido varchar(100) not null,
password varchar(255) not null,
telefono varchar(20) null,
foreign key (id_rol) references roles(id_rol),
fecha_registro timestamp default current_timestamp
);

create table proveedores(
id_proveedor int auto_increment primary key,
id_usuario int not null unique,
nombre_empresa varchar(255) not null,
descripcion text null,
direccion varchar(255) not null,
foreign key (id_usuario) references usuarios(id_usuario) on delete cascade
);

create table catalogo_servicios(
id_servicio int primary key auto_increment,
id_proveedor int not null,
nombre_servicio varchar(255) not null,
descripcion_servicio text null,
precio_base decimal(10,2) not null,
categoria varchar(100) null,
foreign key (id_proveedor) references proveedores(id_proveedor) on delete cascade
);

create table recursos(
id_recurso int primary key auto_increment,
nombre_recurso varchar(150) not null,
tipo_recurso enum('salon','equipo','personal','otro') not null,
descripcion text null,
capacidad int null,
estado enum('disponible','mantenimiento','ocupado') not null default 'disponible'
);

create table reservas(
id_reserva int primary key auto_increment,
id_cliente int not null,
id_organizador int not null,
nombre_evento varchar(200) not null,
fecha_evento datetime not null,
lugar varchar(255) not null,
descripcion text null,
estado enum('pendiente','confirmada','finalizada','cancelada') not null default 'pendiente',
fecha_creacion timestamp default current_timestamp,
foreign key (id_cliente) references usuarios(id_usuario) on delete cascade,
foreign key (id_organizador) references usuarios(id_usuario) on delete cascade
);


create table reserva_recursos(
id_reserva int not null,
id_recurso int not null,
primary key (id_reserva,id_recurso),
foreign key (id_reserva) references reservas(id_reserva) on delete cascade,
foreign key (id_recurso) references recursos(id_recurso) on delete cascade
);


create table evento_proveedores(
id_reserva int not null,
id_servicio int not null,
estado_participacion enum('invitado','confirmado','rechazado') not null default 'invitado',
precio_acordado decimal(10,2) null,
primary key (id_reserva, id_servicio),
foreign key (id_reserva) references reservas(id_reserva) on delete cascade,
foreign key (id_servicio) references catalogo_servicios(id_servicio) on delete cascade
);


create table calificaciones(
id_calificacion int primary key auto_increment,
id_reserva int not null,
id_servicio int not null,
id_cliente int not null,
puntuacion tinyint not null,
comentario text null,
fecha_calificacion timestamp default current_timestamp,
foreign key (id_reserva) references reservas(id_reserva) on delete cascade,
foreign key (id_servicio) references catalogo_servicios(id_servicio) on delete cascade,
foreign key (id_cliente) references usuarios(id_usuario) on delete cascade
);

create table quejas(
id_queja int primary key auto_increment,
id_reserva int not null,
id_usuario_queja int not null,
asunto varchar(255) not null,
descripcion text not null,
estado enum('recibida','en_proceso','resuelta') not null default 'recibida',
fecha_queja timestamp default current_timestamp,
foreign key (id_reserva) references reservas(id_reserva),
foreign key (id_usuario_queja) references usuarios(id_usuario)
);


INSERT INTO roles(nombre) VALUES
('Cliente'),
('Proveedor'),
('Organizador'),
('Administrador');